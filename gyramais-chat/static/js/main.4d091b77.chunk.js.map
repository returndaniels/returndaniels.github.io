{"version":3,"sources":["routes/privateRoute.js","state/auth/authActionTypes.js","state/auth/authActions.js","api/constants.js","components/Join/useJoinForm.js","components/Join/JoinFromValidation.js","assets/loadingio.svg","components/Join/JoinForm.js","assets/logo.svg","pages/SignIn.js","components/Chat/Header.js","components/Chat/Footer.js","components/Chat/Message.js","components/Chat/MessageStory.js","state/messages/messageActionTypes.js","pages/useChat.js","state/messages/messageActions.js","pages/Chat.js","routes/index.js","App.js","reportWebVitals.js","state/middlewares/logger.js","state/auth/authReducer.js","state/messages/messageReducer.js","state/rootReducer.js","state/configureStore.js","index.js","api/graphqlClient.js"],"names":["PrivateRoute","Component","component","rest","user","useSelector","state","auth","render","props","to","pathname","from","location","SIGNIN_STARTED","SIGNIN_SUCCEEDED","SIGNIN_FAILED","SIGNOUT_STARTED","signInFailed","error","type","actionTypes","payload","signIn","dispatch","localStorage","setItem","JSON","stringify","signInSucceeded","signOut","removeItem","JOIN_USER","gql","LOGOUT_USER","POST_MESSAGE","STREAM_MESSAGES","useJoinForm","validate","useDispatch","isLoading","useState","name","setName","formError","setFormError","isSubmitting","setIsSubmitting","useMutation","constants","join","useEffect","variables","then","data","_id","catch","handleChange","event","target","value","handleSubmit","preventDefault","validationErrors","handleBlur","submitting","signInFormValidation","JoinForm","className","JoinFormValidation","onSubmit","placeholder","onChange","onBlur","style","alt","src","loadingIo","disabled","SignIn","logo","Header","handleLogOut","onClick","window","confirm","Footer","sendMessage","message","setMessage","rows","cols","e","resize","Message","highlighted","text","date","MessageStory","messages","formatStringDate","formatedString","slice","map","index","SAVE_MESSAGES","SET_MESSAGE","useChat","postMessage","logout","useSubscription","saveMessages","Chat","Routes","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","logger","store","next","action","console","group","info","result","log","getState","groupEnd","initialState","getItem","parse","reducer","combineReducers","rootReducer","undefined","configureStore","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","loggerMiddleware","middlewareEnhancer","applyMiddleware","createStore","client","link","WebSocketLink","uri","options","reconnect","ApolloClient","cache","InMemoryCache","connect","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d091b77.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n  const { user } = useSelector(state => state.auth);\n  return (\n    <Route\n      {...rest}\n      render={props =>\n          user ? (\n            <Component />) : (\n            <Redirect\n              to={{\n                pathname: '/',\n                state: { from: props.location },\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;\n","export const SIGNIN_STARTED = 'SIGNIN_STARTED';\nexport const SIGNIN_SUCCEEDED = 'SIGNIN_SUCCEEDED';\nexport const SIGNIN_FAILED = 'SIGNIN_FAILED';\n\nexport const SIGNOUT_STARTED = 'SIGNOUT_STARTED';\n","import * as actionTypes from './authActionTypes';\n\nexport function signInStarted() {\n  return {\n    type: actionTypes.SIGNIN_STARTED,\n  };\n}\n\nexport function signInSucceeded(user) {\n  return {\n    type: actionTypes.SIGNIN_SUCCEEDED,\n    payload: {\n      user,\n    },\n  };\n}\n\nexport function signInFailed(error) {\n  return {\n    type: actionTypes.SIGNIN_FAILED,\n    payload: {\n      error,\n    },\n  };\n}\n\nexport function signIn(user) {\n  return (dispatch) => {\n    dispatch(signInStarted());\n    try {\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch(signInSucceeded(user));\n    } catch (error) {\n      dispatch(signInFailed());\n    }\n  }\n}\nfunction signOutStarted() {\n  return {\n    type: actionTypes.SIGNOUT_STARTED,\n  };\n}\n\nexport function signOut() {\n  return (dispatch) => {\n    localStorage.removeItem('user');\n    dispatch(signOutStarted());\n  };\n}\n","\nimport { gql } from \"@apollo/client\";\n\nexport const JOIN_USER = gql`\n\tmutation($name: String!) {\n\t\tjoin(name: $name)\n\t}\n`;\n\nexport const LOGOUT_USER = gql`\n\tmutation($_id: String!, $name: String!) {\n\t\tlogout(_id: $_id, name: $name)\n\t}\n`;\n\nexport const POST_MESSAGE = gql`\n\tmutation($user: String!, $text: String!) {\n\t\tpostMessage(user: $user, text: $text)\n\t}\n`;\n\nexport const GET_MESSAGES = gql`\n\tquery {\n\t\tmessages {\n\t\t\t_id\n\t\t\tuser\n\t\t\ttext\n\t\t\tdate\n\t\t}\n\t}\n`;\n\nexport const STREAM_MESSAGES = gql`\n\tsubscription {\n\t\tmessages {\n\t\t\tuser\n\t\t\ttext\n\t\t\tdate\n\t\t}\n\t}\n`;","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMutation } from '@apollo/client';\nimport { signIn, signInFailed } from \"../../state/auth/authActions\";\n\nimport * as constants from \"../../api/constants\";\n\nfunction useJoinForm(validate) {\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector((state) => state.auth);\n\n  const [name, setName] = useState('');\n  const [formError, setFormError] = useState(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [join] = useMutation(constants.JOIN_USER);\n\n  useEffect(() => {\n    if (isSubmitting && isLoading === false) {\n      if (!formError) {\n        join({ variables: { name } })\n          .then(({ data }) => {\n            dispatch(signIn({_id: data.join, name}))\n          })\n          .catch((error) => {\n            dispatch(signInFailed(error));\n          });\n\n        setIsSubmitting(false);\n      } else {\n        setIsSubmitting(false);\n      }\n    }\n  }, [formError, name, isSubmitting, isLoading, dispatch, join]);\n\n  // useEffect(() => { \n  //   setFormError(error?.detail);\n  // },[error]);\n\n  function handleChange(event) {\n    setName(event.target.value);\n  }\n\n  function handleBlur() {\n    const validationErrors = validate(name);\n    setFormError(validationErrors);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const validationErrors = validate(name);\n    setFormError(validationErrors);\n    setIsSubmitting(true);\n  }\n\n  return {\n    handleChange,\n    handleSubmit,\n    handleBlur,\n    name,\n    formError,\n    submitting: isSubmitting || isLoading,\n  };\n}\n\nexport default useJoinForm;","export default function signInFormValidation(name) {\n  var error = null;\n\n  if (!name) {\n    error = 'Forneça um nome de usuário';\n  }\n\n  return error;\n}\n","export default __webpack_public_path__ + \"static/media/loadingio.69540cde.svg\";","import React from 'react';\nimport useJoinForm from './useJoinForm';\nimport JoinFormValidation from './JoinFromValidation';\nimport loadingIo from '../../assets/loadingio.svg';\nimport './JoinFrom.css';\n\nconst JoinForm = ({ className }) => {\n  const {\n    handleChange,\n    handleSubmit,\n    handleBlur,\n    name,\n    formError,\n    submitting,\n  } = useJoinForm(JoinFormValidation);\n\n  return (\n    <div className={`joinContainer ${className}`}>\n      <div className=\"joinInnerContainer\">\n        <h1 className=\"heading\">Bem vindo ao nosso chat aberto!</h1>\n        <h3 className=\"heading subtitle\">Escolha seu nome de usuário antes de entrar.</h3>\n        <form onSubmit={handleSubmit} className=\"joinForm\">\n          <input \n            placeholder=\"Digite um nome de usuário\" \n            className=\"joinInput\" \n            type=\"text\" \n            value={name}\n            onChange={handleChange} \n            onBlur={handleBlur}\n            style={formError ? { 'border-color': 'red' } : {}}\n          />\n          <div className=\"error\">{formError}</div>\n          <div className=\"submitContainer\">\n            {submitting && <img alt=\"loaging...\" src={loadingIo} />}\n            <button type=\"submit\" className=\"\" disabled={submitting} style={{}}>\n                Acessar\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default JoinForm;\n","export default __webpack_public_path__ + \"static/media/logo.32179390.svg\";","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport JoinForm from '../components/Join/JoinForm';\nimport logo from '../assets/logo.svg'\nimport './SignIn.css';\n\nconst SignIn = () => { \n\tconst { user } = useSelector((state) => state.auth);\n\n\treturn user ? (\n\t\t<Redirect to=\"/chat\" />\n\t\t) : (\n\t\t\t<div className=\"signInPage\">\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<img alt=\"logo\" src={logo} />\n\t\t\t\t</div>\n\t\t\t\t<JoinForm\n\t\t\t\t\tclassName=\"jForm\"\n\t\t\t\t></JoinForm>\n\t\t\t</div>);\n};\n\nexport default SignIn;","import React from 'react';\nimport logo from '../../assets/logo.svg';\nimport './Header.css';\n\nconst Header = ({ handleLogOut }) => {\n\treturn (\n\t\t<div className=\"chatHeader\">\n\t\t\t\t<img alt={logo} src={logo} />\n\t\t\t\t<button \n\t\t\t\t\tonClick={()=> {\n\t\t\t\t\t\tif(window.confirm(\"Deseja sair?\")){\n\t\t\t\t\t\t\thandleLogOut();\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default Header;","import React, { useState } from 'react';\nimport './Footer.css';\n\nconst Footer = ({ sendMessage, className }) => {\n\tconst [message, setMessage] = useState('');\n\n\treturn (\n\t\t<footer className={`footer ${className}`}>\n\t\t\t<textarea\n\t\t\t\trows=\"2\" \n\t\t\t\tcols=\"50\"\n\t\t\t\tplaceholder=\"Digite uma mensagem...\"\n\t\t\t\tvalue={message}\n\t\t\t\tonChange={e => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tsetMessage(e.target.value);\n\t\t\t\t}}\n\t\t\t\tstyle={{resize: \"none\"}}\n\t\t\t></textarea>\n\t\t\t<button \n\t\t\t\t\tonClick={()=> {\n\t\t\t\t\t\tsendMessage(message);\n\t\t\t\t\t\tsetMessage('');\n\t\t\t\t\t}}\n\t\t\t>\n\t\t\t\tEnviar\n\t\t\t</button>\n\t\t</footer>\n\t);\n};\n\nexport default Footer;","import React from 'react';\nimport './Message.css';\n\nconst Message = ({ message, highlighted }) => {\n\treturn (\n\t\t<div \n\t\t\tclassName={\n\t\t\t\thighlighted ? 'message highlighted': 'message'\n\t\t\t} \n\t\t>\n\t\t\t<strong>{message.user}</strong>\n\t\t\t<p>{message.text}</p>\n\t\t\t{message.date && <div className='date'>{message.date}</div>}\n\t\t</div>\n\t);\n};\n\nexport default Message;","import React from 'react';\nimport Message from './Message';\nimport ScrollToBotton from 'react-scroll-to-bottom';\nimport './MessageStory.css';\n\nconst MessageStory = ({ messages, user, className }) => {\n\n\tconst formatStringDate = date => {\n\t\tif(!date) return date;\n\t\tvar formatedString = '';\n\t\tformatedString += `${date.slice(11, 16)} - `;\n\t\tformatedString += `${date.slice(8, 10)}/`;\n\t\tformatedString += `${date.slice(5, 7)}/`;\n\t\tformatedString += `${date.slice(0, 4)}`;\n\t\treturn formatedString;\n\t}\n\n\treturn (\n\t\t<ScrollToBotton className={`MessageStory ${className}`}>\n\t\t\t{messages.map((message, index) =>\n\t\t\t\t<Message \n\t\t\t\t\tkey={index}\n\t\t\t\t\tmessage={{\n\t\t\t\t\t\t...message, \n\t\t\t\t\t\tdate: formatStringDate(message.date)\n\t\t\t\t\t}} \n\t\t\t\t\thighlighted={message.user === user.name} \n\t\t\t\t/>\n\t\t)}\n\t\t</ScrollToBotton>\n\t);\n};\n\nexport default MessageStory;","export const SAVE_MESSAGES = 'SAVE_MESSAGES';\nexport const SET_MESSAGE = 'SET_MESSAGE';\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMutation, useSubscription } from '@apollo/client';\nimport { signOut } from '../state/auth/authActions';\nimport { saveMessages } from '../state/messages/messageActions';\nimport * as constants from '../api/constants';\n\nfunction useChat() {\n\tconst dispatch = useDispatch();\n\tconst [postMessage] = useMutation(constants.POST_MESSAGE);\n\tconst [logout] = useMutation(constants.LOGOUT_USER);\n\tconst { data } = useSubscription(constants.STREAM_MESSAGES);\n\tconst { messages } = useSelector(state => state.messages);\n\tconst { user } = useSelector(state => state.auth);\n\n\tuseEffect(() => {\n\t\tif(data){ dispatch(saveMessages(data.messages)); }\n\t}, [data, dispatch]);\n\n\tconst sendMessage = message => {\n\t\tpostMessage({\n\t\t\tvariables: {\n\t\t\t\tuser: user.name,\n\t\t\t\ttext: message\n\t\t\t}\n\t\t});\n\t};\n\n\tconst handleLogOut = () => {\n\t\tlogout({\n\t\t\tvariables: {\n\t\t\t\t_id: user._id,\n\t\t\t\tname: user.name\n\t\t\t}\n\t\t});\n\t\tdispatch(signOut());\n\t}\n\t\n\treturn {\n\t\tuser,\n\t\tmessages,\n\t\tsendMessage,\n\t\thandleLogOut\n\t}\n};\n\nexport default useChat","import * as actionTypes from './messageActionTypes';\n\nexport function saveMessages(messages) {\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.SAVE_MESSAGES,\n      payload: {\n        messages,\n      },\n    });\n  };\n}\n\nexport function setMessage(message) {\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.SET_MESSAGE,\n      payload: {\n        message\n      }\n    });\n  };\n}\n","import React from 'react';\nimport Header from '../components/Chat/Header';\nimport Footer from '../components/Chat/Footer';\nimport MessageStory from \"../components/Chat/MessageStory\";\nimport useChat from './useChat';\nimport './Chat.css'\n\nconst Chat = () => {\n\tconst { user, messages, sendMessage, handleLogOut } = useChat();\n\n  return (\n\t\t<div className=\"Chat\">\n\t\t\t<Header handleLogOut={handleLogOut}></Header>\n\t\t\t<MessageStory\n\t\t\t\tuser={user}\n\t\t\t\tmessages={messages}\n\t\t\t>\n\t\t\t</MessageStory>\n\t\t\t<Footer className=\"footerChat\" sendMessage={sendMessage}></Footer>\n\t\t</div>\n\t);\n};\n\nexport default Chat;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport PrivateRoute from './privateRoute';\n\nimport { SignIn, Chat } from '../pages'\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" render={() => <SignIn />} />\n      <PrivateRoute path=\"/chat\" component={Chat} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import Routes from './routes'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const logger = store => next => action => {\n  console.group(action.type);\n  console.info('dispatching', action);\n  const result = next(action);\n  console.log('next state', store.getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","import * as actionTypes from './authActionTypes';\n\nconst userFromStorage = localStorage.getItem('user')\n  ? JSON.parse(localStorage.getItem('user'))\n  : null;\n\nconst initialState = {\n  isLoading: false,\n  user: userFromStorage,\n  error: null,\n};\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.SIGNIN_STARTED:\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n    case actionTypes.SIGNIN_SUCCEEDED:\n      return {\n        ...state,\n        isLoading: false,\n        user: action.payload.user,\n        error: null,\n      };\n    case actionTypes.SIGNIN_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload.error,\n      };\n    case actionTypes.SIGNOUT_STARTED:\n      return {\n        ...state,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from './messageActionTypes';\n\nconst initialState = {\n  isLoading: false,\n  messages: [],\n  error: null,\n};\n\nexport default function messageReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.SAVE_MESSAGES:\n      return {\n        ...state,\n        isLoading: false,\n        messages: action.payload.messages,\n        error: null,\n      };\n    case actionTypes.SET_MESSAGE:\n      return {\n        ...state,\n        isLoading: false,\n        messages: [...state.messages, action.payload.message],\n        error: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport authReducer from './auth/authReducer';\nimport messageReducer from \"./messages/messageReducer\";\n\nimport { SIGNOUT_STARTED } from './auth/authActionTypes';\n\nconst reducer = combineReducers({\n  auth: authReducer,\n  messages: messageReducer\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === SIGNOUT_STARTED) {\n    state = undefined;\n  }\n\n  return reducer(state, action);\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport loggerMiddleware from './middlewares/logger';\n\nimport rootReducer from './rootReducer';\n\nconst configureStore = () => {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const middlewares = [thunk, loggerMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  return {\n    ...createStore(rootReducer, {}, composeEnhancers(middlewareEnhancer)),\n  };\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { ApolloProvider } from \"@apollo/client\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport configureStore from './state/configureStore';\nimport { connect } from \"./api/graphqlClient\";\n\nconst store = configureStore();\nconst client = connect();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\n\nconst connect = ()=> {\n\tconst link = new WebSocketLink({\n\t\turi: `ws://gyramais-chat.herokuapp.com/`,\n\t\toptions: {\n\t\t\treconnect: true,\n\t\t},\n\t});\n\n\tconst client = new ApolloClient({\n\t\tlink,\n\t\turi: \"https://gyramais-chat.herokuapp.com/\",\n\t\tcache: new InMemoryCache(),\n\t});\n\n\treturn client;\n}\n\nexport { connect };"],"sourceRoot":""}